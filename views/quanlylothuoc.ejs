<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Quản lý Lô Thuốc</title>
    <!-- Bootstrap CSS -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <!-- Font Awesome -->
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"
      rel="stylesheet"
    />
    <style>
      /* Custom CSS for Modal */
      .modal-content {
        padding: 20px;
      }

      .modal-header {
        background-color: #f8f9fa;
        border-bottom: 2px solid #ddd;
      }

      .modal-body {
        padding: 15px 30px;
      }

      .form-control {
        margin-bottom: 15px;
      }

      #medicines .mb-3 {
        margin-bottom: 1rem;
      }

      .btn-custom {
        background-color: #5cb85c;
        color: white;
      }

      .btn-custom:hover {
        background-color: #4cae4c;
      }

      .btn-exit {
        background-color: #f44336;
        color: white;
      }

      .btn-exit:hover {
        background-color: #d32f2f;
      }
    </style>
  </head>

  <body>
    <%- include('sidebar') %>

    <div class="content">
      <header>
        <nav class="navbar navbar-expand-lg navbar-light bg-light">
          <div class="container-fluid">
            <a class="navbar-brand" href="#">Quản lý Lô Thuốc</a>
            <button
              class="navbar-toggler"
              type="button"
              data-bs-toggle="collapse"
              data-bs-target="#navbarNav"
              aria-controls="navbarNav"
              aria-expanded="false"
              aria-label="Toggle navigation"
            >
              <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
              <ul class="navbar-nav ms-auto">
                <li class="nav-item">
                  <button class="btn btn-exit" type="button">Đăng xuất</button>
                </li>
              </ul>
            </div>
          </div>
        </nav>
      </header>

      <main>
        <div class="container">
          <div class="mb-3 text-end mt-5">
            <button
              class="btn btn-custom btn-success"
              data-bs-toggle="modal"
              data-bs-target="#addModal"
            >
              Thêm Lô Thuốc
            </button>
          </div>

          <table class="table" id="medicine-table">
            <thead>
              <tr>
                <th>Mã Lô Thuốc</th>
                <th>Ngày Nhập</th>
                <th>Tổng Tiền</th>
              </tr>
            </thead>
            <tbody>
              <% if (listLoThuocs.length > 0) { %> <%
              listLoThuocs.forEach((loThuoc) => { %>
              <tr>
                <th scope="row"><%= loThuoc.LoThuocID %></th>
                <td><%= loThuoc.NgayNhap %></td>
                <td><%= loThuoc.TongTien %></td>
              </tr>
              <% }); %> <% } else { %>
              <tr>
                <td colspan="4">Không có lô thuốc nào</td>
              </tr>
              <% } %>
            </tbody>
          </table>
        </div>

        <!-- Modal Thêm Lô Thuốc -->
        <div
          class="modal fade"
          id="addModal"
          tabindex="-1"
          aria-labelledby="addModalLabel"
          aria-hidden="true"
        >
          <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
              <div class="modal-header text-end mb-3">
                <h5 class="modal-title" id="addModalLabel">Thêm Lô Thuốc</h5>
                <button
                  type="button"
                  class="btn-close"
                  data-bs-dismiss="modal"
                  aria-label="Close"
                ></button>
              </div>
              <div class="modal-body">
                <form id="addLoThuocForm">
                  <div class="mb-3">
                    <label for="ngayNhap" class="form-label">Ngày Nhập</label>
                    <input
                      type="date"
                      name="NgayNhap"
                      class="form-control"
                      required
                      value="<%= new Date().toISOString().split('T')[0] %>"
                    />
                  </div>
                  <div class="mb-3">
                    <label for="tongTien" class="form-label">Tổng Tiền</label>
                    <input
                      type="number"
                      name="TongTien"
                      class="form-control"
                      required
                      readonly
                    />
                  </div>
                  <div id="medicines">
                    <div class="mb-3" id="medicine1">
                      <label for="thuoc1" class="form-label">Thuốc 1</label>
                      <input
                        type="text"
                        name="ThuocData[0][TenThuoc]"
                        class="form-control"
                        placeholder="Tên thuốc"
                        required
                      />
                      <input
                        type="number"
                        name="ThuocData[0][GiaTienNhap]"
                        class="form-control"
                        placeholder="Giá nhập"
                        required
                      />
                      <input
                        type="number"
                        name="ThuocData[0][SoLuong]"
                        class="form-control"
                        placeholder="Số lượng"
                        required
                      />
                      <input
                        type="date"
                        name="ThuocData[0][NgaySanXuat]"
                        class="form-control"
                        required
                      />
                      <input
                        type="date"
                        name="ThuocData[0][HanSuDung]"
                        class="form-control"
                        required
                      />
                      <button
                        type="button"
                        class="btn btn-danger removeMedicineBtn"
                      >
                        Xóa Thuốc
                      </button>
                    </div>
                  </div>
                  <button
                    type="button"
                    class="btn btn-secondary"
                    id="addMedicineBtn"
                  >
                    Thêm Thuốc
                  </button>
                  <button type="submit" class="btn btn-primary">Lưu</button>
                </form>
              </div>
            </div>
          </div>
        </div>
      </main>
    </div>

    <!-- Bootstrap JS and Popper.js -->
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js"></script>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        let medicineCount = 1;

        // Hàm tính tổng tiền
        const calculateTotal = () => {
          let total = 0;
          const medicines = document.querySelectorAll("#medicines > div");

          medicines.forEach((medicineDiv) => {
            const giaNhapInput = medicineDiv.querySelector(
              '[name$="[GiaTienNhap]"]'
            );
            const soLuongInput = medicineDiv.querySelector(
              '[name$="[SoLuong]"]'
            );

            const giaNhap = parseFloat(giaNhapInput?.value || 0);
            const soLuong = parseFloat(soLuongInput?.value || 0);

            total += giaNhap * soLuong;
          });

          document.querySelector('[name="TongTien"]').value = total.toFixed(2);
        };

        // Hàm cập nhật thứ tự thuốc
        const updateMedicineOrder = () => {
          const medicines = document.querySelectorAll("#medicines .mb-3");
          medicines.forEach((medicine, index) => {
            const labels = medicine.querySelectorAll("label");
            labels.forEach((label) => {
              label.textContent = `Thuốc ${index + 1}`;
            });
            const inputs = medicine.querySelectorAll("input");
            inputs.forEach((input) => {
              input.name = input.name.replace(
                /\[Thuoc\[\d+\]\]/,
                `Thuoc[${index}]`
              );
            });
          });
          medicineCount = medicines.length;
        };

        // Xóa thuốc
        document.querySelector("#medicines").addEventListener("click", (e) => {
          if (e.target.classList.contains("removeMedicineBtn")) {
            e.target.closest(".mb-3").remove();
            updateMedicineOrder();
            calculateTotal();
          }
        });

        // Thêm thuốc
        document
          .querySelector("#addMedicineBtn")
          .addEventListener("click", () => {
            medicineCount++;
            const template = `
      <div class="mb-3" id="medicine${medicineCount}">
        <label for="thuoc${medicineCount}" class="form-label">Thuốc ${medicineCount}</label>
        <input
          type="text"
          name="ThuocData[${medicineCount - 1}][TenThuoc]"
          class="form-control"
          placeholder="Tên thuốc"
          required
        />
        <input
          type="number"
          name="ThuocData[${medicineCount - 1}][GiaTienNhap]"
          class="form-control"
          placeholder="Giá nhập"
          required
        />
        <input
          type="number"
          name="ThuocData[${medicineCount - 1}][SoLuong]"
          class="form-control"
          placeholder="Số lượng"
          required
        />
        <input
          type="date"
          name="ThuocData[${medicineCount - 1}][NgaySanXuat]"
          class="form-control"
          required
        />
        <input
          type="date"
          name="ThuocData[${medicineCount - 1}][HanSuDung]"
          class="form-control"
          required
        />
        <button type="button" class="btn btn-danger removeMedicineBtn">Xóa Thuốc</button>
      </div>`;
            document
              .querySelector("#medicines")
              .insertAdjacentHTML("beforeend", template);
          });

        // Cập nhật tổng tiền khi giá hoặc số lượng thay đổi
        document.querySelector("#medicines").addEventListener("input", (e) => {
          if (
            e.target.name.includes("GiaTienNhap") ||
            e.target.name.includes("SoLuong")
          ) {
            calculateTotal();
          }
        });

        // Lưu form
        document
          .querySelector("#addLoThuocForm")
          .addEventListener("submit", async (event) => {
            event.preventDefault(); // Ngăn chặn reload trang khi submit form

            const formData = new FormData(event.target);
            const data = Object.fromEntries(formData.entries());

            // Tạo mảng thuốc từ dữ liệu trong form
            data.ThuocData = [];
            const medicineDivs = document.querySelectorAll("#medicines > div");

            medicineDivs.forEach((medicineDiv, index) => {
              const thuoc = {
                TenThuoc: formData.get(`ThuocData[${index}][TenThuoc]`),
                GiaTienNhap: Number(
                  formData.get(`ThuocData[${index}][GiaTienNhap]`)
                ),
                SoLuong: Number(formData.get(`ThuocData[${index}][SoLuong]`)),
                NgaySanXuat: formData.get(`ThuocData[${index}][NgaySanXuat]`),
                HanSuDung: formData.get(`ThuocData[${index}][HanSuDung]`),
              };

              // Kiểm tra nếu thuốc hợp lệ trước khi thêm vào mảng
              if (
                thuoc.TenThuoc &&
                thuoc.GiaTienNhap &&
                thuoc.SoLuong &&
                thuoc.NgaySanXuat &&
                thuoc.HanSuDung
              ) {
                data.ThuocData.push(thuoc); // Đảm bảo đây là mảng
              } else {
                console.error(`Thuốc ${index + 1} không hợp lệ:`, thuoc);
              }
            });

            // Kiểm tra dữ liệu NgayNhap
            if (!data.NgayNhap) {
              alert("Vui lòng nhập ngày nhập!");
              return;
            }

            // Kiểm tra tổng tiền
            if (isNaN(data.TongTien) || data.TongTien <= 0) {
              alert("Tổng tiền không hợp lệ!");
              return;
            }

            // Chuyển tổng tiền thành số nếu chưa
            data.TongTien = Number(data.TongTien);

            // Log dữ liệu chuẩn bị gửi đi
            console.log("Ngày nhập:", data.NgayNhap);
            console.log("Tổng tiền:", data.TongTien);
            data.ThuocData.forEach((thuoc, index) => {
              console.log(`Thuốc ${index + 1}:`, thuoc);
            });

            console.log(
              "Dữ liệu chuẩn bị gửi đi:",
              JSON.stringify(data, null, 2)
            );

            // Gửi dữ liệu đến server qua fetch
            try {
              const response = await fetch("/thuoclo/lothuoc", {
                method: "POST",
                headers: {
                  "Content-Type": "application/json",
                },
                body: JSON.stringify(data),
              });

              const responseData = await response.json();
              console.log("Phản hồi từ server:", responseData);

              // Kiểm tra phản hồi từ server
              if (response.ok && responseData.success) {
                alert("Lưu thành công!");
                location.reload(); // Tải lại trang nếu lưu thành công
              } else {
                alert("Đã xảy ra lỗi khi lưu: " + responseData.message);
              }
            } catch (error) {
              console.error("Lỗi:", error);
              alert("Không thể kết nối đến server!");
            }
          });
      });
    </script>
  </body>
</html>
