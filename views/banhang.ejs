<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Admin Dashboard</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://maxst.icons8.com/vue-static/landings/line-awesome/line-awesome/1.3.0/css/line-awesome.min.css"
    />
  </head>
  <body>
    <%- include('sidebar')%>
    <div class="content">
      <header>
        <nav class="navbar navbar-expand-lg navbar-light bg-light">
          <div class="container-fluid">
            <a class="navbar-brand" href="#">Quản lý bán hàng</a>
            <button
              class="navbar-toggler"
              type="button"
              data-bs-toggle="collapse"
              data-bs-target="#navbarNav"
              aria-controls="navbarNav"
              aria-expanded="false"
              aria-label="Toggle navigation"
            >
              <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
              <ul class="navbar-nav ms-auto">
                <li class="nav-item">
                  <form action="/logout" method="GET">
                    <button class="btn btn-exit" type="submit">
                      Đăng xuất
                    </button>
                  </form>
                </li>
              </ul>
            </div>
          </div>
        </nav>
      </header>

      <main>
        <div class="container" style="margin-right: 80px; max-width: 100%">
          <div class="row">
            <div class="col-md-8">
              <div class="card">
                <div class="card-header bg-primary text-white">
                  Danh Sách Thuốc
                </div>
                <div class="card-body">
                  <table class="table table-striped">
                    <thead>
                      <tr>
                        <th>STT</th>
                        <th>Tên Thuốc</th>
                        <th>Số Lượng</th>
                        <th>Hạn Sử Dụng</th>
                        <th>Giá Bán</th>
                        <th>Chọn</th>
                      </tr>
                    </thead>
                    <tbody>
                      <% thuoc.forEach((item, index) => { %>
                      <tr>
                        <td><%= index + 1 %></td>
                        <td><%= item.TenThuoc %></td>
                        <td><%= item.SoLuong %></td>
                        <td><%= item.HanSuDung %></td>
                        <td><%= item.GiaTienBan %> VND</td>
                        <td>
                          <button
                            class="btn btn-sm btn-primary add-to-cart"
                            data-id="<%= item.ThuocID %>"
                            data-loid="<%= item.LoThuocID %>"
                            data-name="<%= item.TenThuoc %>"
                            data-price="<%= item.GiaTienBan %>"
                            data-quantity="<%= item.SoLuong %>"
                          >
                            Chọn
                          </button>
                        </td>
                      </tr>
                      <% }); %>
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
            <div class="col-md-4">
              <div class="card">
                <div class="card-header bg-secondary text-white">
                  Thông Tin Người Dùng
                </div>
                <div class="card-body">
                  <form id="hoadon" class="tt-nguoidung">
                    <div class="mb-3">
                      <label for="name" class="form-label">Tên</label>
                      <input
                        type="text"
                        class="form-control"
                        id="name"
                        name="HoTen"
                        placeholder="Tên người dùng"
                        required
                      />
                    </div>
                    <div class="mb-3">
                      <label for="phone" class="form-label">SDT</label>
                      <input
                        type="text"
                        class="form-control"
                        id="phone"
                        name="SoDienThoai"
                        placeholder="Số điện thoại"
                        required
                      />
                    </div>
                    <div class="mb-3">
                      <label for="points" class="form-label">Điểm</label>
                      <input
                        type="text"
                        class="form-control"
                        id="points"
                        name="Diem"
                        value="0"
                        disabled
                      />
                    </div>
                    <div class="mb-3 thuocdamua-table">
                      <label for="medicines-purchased" class="form-label"
                        >Thuốc đã mua</label
                      >
                      <table class="table table-bordered">
                        <thead>
                          <tr>
                            <th>Tên Thuốc</th>
                            <th>Số Lượng</th>
                            <th>Giá Bán</th>
                            <th>Thành Tiền</th>
                            <th></th>
                          </tr>
                        </thead>
                        <tbody id="cart"></tbody>
                      </table>
                    </div>
                    <div class="mb-3">
                      <label for="voucher" class="form-label"
                        >Mã giảm giá</label
                      >
                      <input
                        type="text"
                        class="form-control"
                        id="voucher"
                        name="MaGiamGiaID"
                        placeholder="Mã giảm giá"
                      />
                    </div>
                    <div class="mb-3">
                      <label for="total" class="form-label">Tổng tiền</label>
                      <input
                        type="text"
                        class="form-control"
                        id="total"
                        name="TongTien"
                        disabled
                      />
                    </div>
                    <button type="submit" class="btn btn-primary">
                      Xác Nhận
                    </button>
                  </form>
                </div>
              </div>
            </div>
          </div>
        </div>
      </main>
    </div>

    <script>
      let giamGia = 0;
      document
        .getElementById("voucher")
        .addEventListener("change", async function () {
          const voucher = this.value.trim();

          if (voucher) {
            try {
              // Gửi yêu cầu đến API để tìm kiếm khách hàng
              const response = await fetch(`/banhang/voucher/${voucher}`);
              const data = await response.json();

              if (response.ok && data.success) {
                const today = new Date();
                const beginAt = new Date(data.MaGiamGias.beginAt);
                const endAt = new Date(data.MaGiamGias.endAt);

                if (endAt > today && today > beginAt) {
                  giamGia = data.MaGiamGias.GiamGia;
                }
              } else {
                giamGia = 0;
              }
            } catch (error) {
              // Xử lý lỗi khi gọi API
              console.error("Lỗi khi tìm kiếm mã giảm giá:", error);
              alert(
                "Đã xảy ra lỗi khi tìm kiếm mã giảm giá. Vui lòng thử lại sau."
              );
            }
          } else {
            giamGia = 0;
          }
          updateCart();
        });

      // Xử lý sự kiện khi người dùng nhập số điện thoại
      document
        .getElementById("phone")
        .addEventListener("change", async function () {
          const phone = this.value.trim();

          if (phone) {
            try {
              // Gửi yêu cầu đến API để tìm kiếm khách hàng
              const response = await fetch(`/banhang/khachhang/${phone}`);
              const data = await response.json();

              if (response.ok && data.success) {
                // Cập nhật thông tin khách hàng
                document.getElementById("name").value =
                  data.khachHang.HoTen || "";
                document.getElementById("points").value =
                  data.khachHang.Diem || 0;
              } else {
                // Xử lý khi không tìm thấy khách hàng
                document.getElementById("name").value = "";
                document.getElementById("points").value = 0;
              }
            } catch (error) {
              // Xử lý lỗi khi gọi API
              console.error("Lỗi khi tìm kiếm khách hàng:", error);
              alert(
                "Đã xảy ra lỗi khi tìm kiếm khách hàng. Vui lòng thử lại sau."
              );
            }
          } else {
            // Khi số điện thoại trống
            document.getElementById("name").value = "";
            document.getElementById("points").value = 0;
          }
        });

      // Thêm thuốc vào giỏ hàng
      document.addEventListener("click", function (e) {
        if (e.target && e.target.classList.contains("add-to-cart")) {
          const drug = {
            id: e.target.getAttribute("data-id"),
            loid: e.target.getAttribute("data-loid"),
            name: e.target.getAttribute("data-name"),
            quantitys: e.target.getAttribute("data-quantity"),
            price: e.target.getAttribute("data-price"),
            quantity: 1,
          };

          let cart = JSON.parse(localStorage.getItem("cart")) || [];

          // Kiểm tra nếu thuốc đã có trong giỏ, tăng số lượng
          const existingDrugIndex = cart.findIndex(
            (item) => item.id === drug.id && item.loid === drug.loid
          );
          if (existingDrugIndex !== -1) {
            if (cart[existingDrugIndex].quantity + 1 <= drug.quantitys) {
              cart[existingDrugIndex].quantity++;
            } else {
              alert("Số lượng thuốc không đủ");
            }
          } else {
            cart.push(drug);
          }

          localStorage.setItem("cart", JSON.stringify(cart));
          updateCart();
        }
      });

      function updateCart() {
        const cart = JSON.parse(localStorage.getItem("cart")) || [];
        const cartTable = document.querySelector("#cart");
        cartTable.innerHTML = "";

        let total = 0;
        cart.forEach((item, index) => {
          total += item.price * item.quantity;
          const row = document.createElement("tr");
          row.innerHTML = `
        <td>${item.name}</td>
        <td>
          <button class="btn btn-sm btn-warning decrease" style="padding: 3px;" data-index="${index}">-1</button>
          ${item.quantity}
          <button class="btn btn-sm btn-success increase" style="padding: 3px;" data-index="${index}">+1</button>
        </td>
        <td>${item.price} VND</td>
        <td>${item.price * item.quantity} VND</td>
        <td><button class="btn btn-sm btn-danger remove" data-index="${index}">Xóa</button></td>
      `;
          cartTable.appendChild(row);
        });

        // Cập nhật tổng tiền
        const totalWithDiscount = total - (total / 100) * giamGia;

        document.getElementById("total").value = totalWithDiscount;
      }

      // Thêm sự kiện cho các nút điều chỉnh số lượng và xóa
      document.addEventListener("click", function (e) {
        const cart = JSON.parse(localStorage.getItem("cart")) || [];

        // Khi người dùng nhấn vào nút giảm số lượng
        if (e.target && e.target.classList.contains("decrease")) {
          const index = e.target.getAttribute("data-index");
          if (cart[index].quantity > 1) {
            cart[index].quantity--;
          } else {
            cart.splice(index, 1);
          }
          localStorage.setItem("cart", JSON.stringify(cart));
          updateCart();
        }

        // Khi người dùng nhấn vào nút tăng số lượng
        if (e.target && e.target.classList.contains("increase")) {
          const index = e.target.getAttribute("data-index");
          const drug = cart[index];

          if (drug.quantity < drug.quantitys) {
            drug.quantity++;
          } else {
            alert("Số lượng thuốc không đủ");
          }

          localStorage.setItem("cart", JSON.stringify(cart));
          updateCart();
        }
        // Khi người dùng nhấn vào nút xóa thuốc khỏi giỏ hàng
        if (e.target && e.target.classList.contains("remove")) {
          const index = e.target.getAttribute("data-index");
          cart.splice(index, 1);
          localStorage.setItem("cart", JSON.stringify(cart));
          updateCart();
        }
      });
      updateCart();
      document
        .getElementById("hoadon")
        .addEventListener("submit", async (event) => {
          // Ngăn chặn hành động mặc định của form (để không reload trang)
          event.preventDefault();

          // Lấy giá trị từ form
          const formData = new FormData(event.target);
          const data = Object.fromEntries(formData.entries());

          // Lấy giá trị tổng tiền từ input "total" và điểm từ input "points"
          const total = document.getElementById("total").value.trim();
          const diem = document.getElementById("points").value.trim();

          // Cập nhật thông tin vào đối tượng data
          data.TongTien = total;
          data.Diem = diem;
          const cart = JSON.parse(localStorage.getItem("cart")) || [];

          // Thêm thông tin giỏ hàng vào dữ liệu
          data.cart = cart;
          console.log(data);

          // Gửi dữ liệu lên server (ví dụ bằng fetch)
          const response = await fetch("/banhang", {
            method: "POST",
            body: JSON.stringify(data),
            headers: {
              "Content-Type": "application/json",
            },
          });

          if (response.ok) {
            // Nếu gửi thành công, xóa giỏ hàng trong localStorage
            localStorage.removeItem("cart");

            // Thông báo hoặc chuyển hướng đến trang khác (ví dụ trang thanh toán hoàn tất)
            alert("Đơn hàng đã được xử lý thành công!");
            window.location.href = "/hoadon";
          } else {
            alert("Có lỗi xảy ra khi gửi đơn hàng!");
          }
        });
    </script>
  </body>
</html>
